services: 
  database:
    image: postgres:latest
    env_file: .env
    ports:
      - 5432:5432
    environment:
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/data/postgres
    restart: unless-stopped

  strapi:
    build: ./backend/ 
    image: strapi/strapi
    container_name: strapi
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      DATABASE_HOST: database 
      DATABASE_PORT: 5432 
      DATABASE_CLIENT: postgres 
      DATABASE_NAME: ${POSTGRES_DB} 
      DATABASE_USERNAME: ${POSTGRES_USER} 
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on: 
      - database 
    volumes:
      - ./app:/srv/app
    ports:
      - "1337:1337"

  # strapi: 
  #   build: ./backend/ 
  #   depends_on: 
  #     - database 
  #   environment: 
  #     DATABASE_HOST: database 
  #     DATABASE_PORT: 5432 
  #     DATABASE_CLIENT: postgres 
  #     DATABASE_NAME: ${POSTGRES_DB} 
  #     DATABASE_USERNAME: ${POSTGRES_USER} 
  #     DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
  #   env_file: ./backend/.env
  #   volumes:
  #     - ./backend/public/uploads:/data/public
  #   ports: 
  #     - 1337:1337 
  #   restart: unless-stopped 
    
  # nginx:
  #   image: nginx:latest
  #   depends_on:
  #     - certbot
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./frontend_build/:/app/:ro
  #     - ./ssl/tests/:/var/www/certbot/:ro
  #     - ./ssl/conf/:/etc/letsencrypt/:ro
  #   ports:
  #     - 80:80
  #     - 443:443
      
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./ssl/conf/:/etc/letsencrypt:rw
  #     - ./ssl/tests/:/var/www/certbot:rw
  #   command: certonly --webroot -w /var/www/certbot --force-renewal --email mail@gmail.com -d sunbeam55.com -d www.sunbeam55.com -d admin.sunbeam55.com --agree-tos

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      target: runner
    env_file: ./frontend/.env
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development

  # frontend:
  #   container_name: frontend
  #   build: ./frontend/
  #   env_file: ./frontend/.env
  #   volumes:
  #     - ./frontend_build/:/app/build/:rw
  #   depends_on:
  #     - strapi
  #   ports:
  #     - 3000:3000
    # restart: unless-stopped
  

# version: "3"
# services:
#   strapi:
#     container_name: strapi
#     build: ./backend/
#     image: strapi:latest
#     restart: unless-stopped
#     env_file: ./backend/.env
#     environment:
#       DATABASE_HOST: database 
#       DATABASE_PORT: 5432 
#       DATABASE_CLIENT: postgres 
#       DATABASE_NAME: ${POSTGRES_DB} 
#       DATABASE_USERNAME: ${POSTGRES_USER} 
#       DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
#       JWT_SECRET: ${JWT_SECRET}
#       ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
#       APP_KEYS: ${APP_KEYS}
#       NODE_ENV: ${NODE_ENV}
#     volumes:
#       - ./config:/opt/app/config
#       - ./src:/opt/app/src
#       - ./package.json:/opt/package.json
#       - ./yarn.lock:/opt/yarn.lock
#       - ./.env:/opt/app/.env
#       - ./public/uploads:/opt/app/public/uploads
#     ports:
#       - "1337:1337"
#     networks:
#       - strapi
#     depends_on:
#       - strapiDB

#   strapiDB:
#     container_name: strapiDB
#     platform: linux/amd64 #for platform error on Apple M1 chips
#     restart: unless-stopped
#     env_file: .env
#     image: postgres:12.0-alpine
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER} 
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB} 
#     volumes:
#       - strapi-data:/var/lib/postgresql/data/ #using a volume
#       #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

#     ports:
#       - "5432:5432"
#     networks:
#       - strapi

#   frontend:
#     build:
#       context: ./frontend/
#       target: runner
#     env_file: ./frontend/.env
#     volumes:
#       - .:/app
#     command: npm run dev
#     ports:
#       - "3000:3000"
#     environment:
#       NODE_ENV: development

# volumes:
#   strapi-data:

# networks:
#   strapi:
#     name: Strapi
#     driver: bridge